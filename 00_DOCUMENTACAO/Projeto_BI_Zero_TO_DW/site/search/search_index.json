{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Projeto BI Zero TO DW","text":""},{"location":"#apresentacao-do-projeto-bi-zero-to-dw","title":"Apresenta\u00e7\u00e3o do Projeto BI Zero TO DW","text":"<p>Nesse projeto vamos abordar o fluxo dos dados de um projeto de Big Data.</p> <p></p> <p>Partindo da premissa que o projeto dever\u00e1 conter as seguintes fases:</p> <ul> <li>1 - Os dados est\u00e3o dispon\u00edveis em um banco de dados Azure SQL Database;</li> <li>2 - Esses dados dever\u00e3o ser extra\u00eddos e persistidos na camada Landing Zone para posterior processamento;</li> <li>3 - Ap\u00f3s a extra\u00e7\u00e3o, os dados s\u00e3o processados e armazenados na camada bronze sem nenhum tratamento de dados. A estrutura das tabelas da camada bronze dever\u00e3o ser identicas a dos arquivos;</li> <li>4 - Na camada silver, os dados dever\u00e3o passar por transforma\u00e7\u00f5es/tratamentos que s\u00e3o descritos mais a frente;</li> <li>5 - Na camada gold, os dados devem estar modelados no padr\u00e3o multidimensional, criando tabelas de dimens\u00f5es e fato;</li> </ul>"},{"location":"0_quem_sou_eu/","title":"Projeto BI Zero TO DW","text":""},{"location":"0_quem_sou_eu/#quem-sou-eu","title":"Quem sou eu?","text":"<p>Meu nome \u00e9 Gabriel Quintella e voc\u00ea pode me chamar de Quintell\u00e3o caso queira!</p> <p>Trabalho com dados desde 2005.</p> <p>Possuo forma\u00e7\u00e3o em Sistemas de Informa\u00e7\u00e3o com especializa\u00e7\u00e3o em Projetos e Bancos de Dados com foco em BI e Bigdata.</p> <p>Possuo certica\u00e7\u00e3o Itil, Cobit, Microsoft tanto em ambientes OnPrimise e Cloud (Azure), Python e Databricks.</p> <p>Al\u00e9m disso trabalho atualmente como Engenheiro de Dados por\u00e9m j\u00e1 atuei como DBA, Administrador de Dados, Programador SQL como foco em Pl/SQL e TSQL, desenvolvedor de BI e como engenheiro de dados.</p> <p>Possuo experi\u00eancia em lideran\u00e7a de times de dados e proefici\u00eancia em bancos de dados tanto na parte de administra\u00e7\u00e3o quanto programa\u00e7\u00e3o, profundos conhecimentos em modelagem de dados relacional e multidimensional.</p> <p>Quando falamos em ferramentas de integra\u00e7\u00e3o, trabalehi por muitos anos com Pentaho, SQL Server Integration Service e Data Factory.</p> <p>E tamb\u00e9m possuo conhecimento em Python e PySpark.</p> <p>Deixo minhas redes sociais para poder acompanhar meus trabalhos!</p> <p>Instagram - https://www.instagram.com/dbaassists/ Twiter - https://twitter.com/dbaassists YouTube - https://www.youtube.com/@quintellao/featured Blog - https://www.dbaassists.com.br/ GitHub - https://github.com/dbaassists</p> <p>Grande abra\u00e7o e fique com Deus!!</p> <p>Quintell\u00e3o</p>"},{"location":"10_notebook_externo/","title":"Projeto BI Zero TO DW","text":""},{"location":"10_notebook_externo/#10-notebook-externo","title":"10 - Notebook Externo","text":""},{"location":"10_notebook_externo/#seq-101-funcao-remove-acentuacao","title":"SEQ-10.1 - Fun\u00e7\u00e3o Remove Acentua\u00e7\u00e3o","text":"<p>Essa fun\u00e7\u00e3o ela varre a coluna posi\u00e7\u00e3o a posi\u00e7\u00e3o em busca de caracter com acentos para poder substituir.</p> <pre><code>def acentuacao(var):\n  De   = \"\u00e1\u00e9\u00ed\u00f3\u00fa\u00e0\u00e8\u00ec\u00f2\u00f9\u00e2\u00ea\u00ee\u00f4\u00fb\u00e3\u00f5\u00e4\u00eb\u00ef\u00f6\u00fc\u00e7\u00f1\u00ff\u00fd\u00c1\u00c9\u00cd\u00d3\u00da\u00c0\u00c8\u00cc\u00d2\u00d9\u00c2\u00ca\u00ce\u00d4\u00db\u00c3\u00d5\u00c4\u00cb\u00cf\u00d6\u00dc\u00c7\u00d1\u0178\u00dd\"\n  Para = \"aeiouaeiouaeiouaoaeioucnyyAEIOUAEIOUAEIOUAOAEIOUCNYY\"\n  Return = \"\"\n  count = 0\n\n  try:\n    while count &lt; len(var):\n      letra = var[count]\n      indice = De.find(letra)\n      count += 1\n      if indice == -1:\n        Return += letra\n      else:\n        Return += Para[indice]\n  except:\n    Return = \"\"\n\n  return Return\n\nspark.udf.register(\"acentuacao\", acentuacao)\n</code></pre> <p>Para conhecer melhor seu funcionamento, deixo o link de um v\u00eddeo do meu canal que explico com maiores detalhes V\u00eddeo Removendo Acentua\u00e7\u00e3o.</p>"},{"location":"10_notebook_externo/#seq-102-funcao-cria-dados-dimensao-tempo","title":"SEQ-10.2 - Fun\u00e7\u00e3o Cria Dados Dimens\u00e3o Tempo","text":"<pre><code>def cria_dimensao_tempo(data_inicial, data_fim, dias_acrescimo):\n\n        inicio = data_inicial\n\n        while data_inicial &lt;= data_fim:\n                v_id_tempo = str(data_inicial.strftime(\"%Y%m%d\"))\n                v_ano = data_inicial.year\n                v_mes = data_inicial.month\n                v_dia = data_inicial.day\n\n                if inicio == data_inicial:\n\n                        spark.sql(fr\"\"\"TRUNCATE TABLE gold.DIM_TEMPO\"\"\")\n\n                data_inicial += dias_acrescimo\n\n                spark.sql(fr\"\"\"\n                        INSERT INTO gold.DIM_TEMPO \n                        (ID_TEMPO\n                        ,DATA\n                        ,ANO\n                        ,MES\n                        ,DIA\n                        ,DATA_CADASTRO\n                        ,DATA_ALTERACAO) \n                        VALUES (sha2(cast({v_id_tempo} AS VARCHAR(10)),256)\n                                ,CAST({v_id_tempo} AS VARCHAR(10))\n                                ,{v_ano}\n                                ,{v_mes}\n                                ,{v_dia}\n                                ,from_utc_timestamp(now(),'GMT-3')\n                                ,from_utc_timestamp(now(),'GMT-3')\n                                );\n                        \"\"\")\n\n</code></pre>"},{"location":"11_arquivos/","title":"Projeto BI Zero TO DW","text":""},{"location":"11_arquivos/#11-arquivos-do-projeto","title":"11 - Arquivos do Projeto","text":""},{"location":"11_arquivos/#seq-11-sessao-de-arquivos","title":"SEQ-11 - Sess\u00e3o de Arquivos","text":"<p>Essa fun\u00e7\u00e3o ela varre a coluna posi\u00e7\u00e3o a posi\u00e7\u00e3o em busca de caracter com acentos para poder substituir.</p> <p>Para visualizar o arquivo da arquitetura do projeto (SEQ-03), \u00e9 ncess\u00e1rio acessar o Excalidraw</p> Sequ\u00eancia Arquivo Link SEQ-01 Arquivo Cria\u00e7\u00e3o Tabelas SQL Arquivo CREATE TABLE SEQ-02 Arquivo Inser\u00e7\u00e3o Dados nas Tabelas SQL Arquivo INSERT DATA SEQ-03 Arquivo da Arquitetura do Projeto Arquivo Arquitetura SEQ-04 Arquivo Excel de Exemplo do Cen\u00e1rio Arquivo Base Excel SEQ-05 Arquivo Configura\u00e7\u00e3o Ambiente Databricks Notebook Configura\u00e7\u00e3o SEQ-06 Arquivo Exporta\u00e7\u00e3o Dados Azure SQL Database Notebook Extra\u00e7\u00e3o Dados SEQ-07 Arquivo JSON de Parametriza\u00e7\u00e3o de Conex\u00e3o com Azure SQL Database JSON de Configura\u00e7\u00e3o SEQ-08 Arquivo Ingest\u00e3o Dados Camada Bronze Notebook Carga Camada Bronze SEQ-09 Arquivo Ingest\u00e3o Dados Camada Silver Notebook Carga Camada Silver SEQ-10 Arquivo Ingest\u00e3o Dados Camada Gold Notebook Carga Camada Gold SEQ-11 Arquivo Carga Dados Azure SQL Database Schema DW Notebook Carga DW Azure SQL Database SEQ-12 Arquivo An\u00e1lise de Dados Databricks Notebook An\u00e1lise dos Dados"},{"location":"1_arquitetura/","title":"Projeto BI Zero TO DW","text":""},{"location":"1_arquitetura/#1-arquitetura-do-projeto-bi-zero-to-dw","title":"1 - Arquitetura do Projeto BI Zero TO DW","text":"<p>Com base no que foi definido na fase de apresenta\u00e7\u00e3o do projeto, a arquitetura foi definida da seguinte forma.</p> <p></p> <p>Objetos criados:</p> Sequ\u00eancia Objeto Detalhamento SEQ-01 Notebook de Configura\u00e7\u00e3o do Ambiente Nesse notebook ficar\u00e1 respons\u00e1vel por conter todos as instru\u00e7\u00f5es de cria\u00e7\u00e3o do armazenamento landing zone no HDFS, cria\u00e7\u00e3o dos Schemas Bronze, Silver e Gold, assim como a cria\u00e7\u00e3o das tabelas. Todas os Schemas e Tabelas devem ter a sua defini\u00e7\u00e3o e tamb\u00e9m ficar\u00e1 respons\u00e1vel por conter o script de cria\u00e7\u00e3o da tabela dimens\u00e3o tempo. SEQ-02 Arquivo Par\u00e2metro de Conex\u00e3o com O Azure SQL Database Estrutura respons\u00e1vel por gerenciar as credenciais de acesso ao banco de dados Azure SQL Database SEQ-03 Notebook de Extra\u00e7\u00e3o de Dados do Azure SQL Database Ser\u00e1 respons\u00e1vel por realizar a identifica\u00e7\u00e3o de quais dados (tabelas) ser\u00e3o exportadas e pertidas na camada landing zone no formato parquet. SEQ-04 Notebook Ingest\u00e3o Camada Bronze Respons\u00e1vel pelo fluxo de leitura da camada landing zone e ingest\u00e3o dos dados na camada bronze. SEQ-05 Cria\u00e7\u00e3o Fun\u00e7\u00e3o Tratamento de Dados Fun\u00e7\u00e3o que ser\u00e1 usada na ingest\u00e3o dos dados na camada silver e que ser\u00e1 usado para aplicar regras de tratamento de dados. SEQ-06 Notebook Ingest\u00e3o Camada Silver Respons\u00e1vel pela ingest\u00e3o dos dados na camada silver a aplica\u00e7\u00e3o de regras de neg\u00f3cio. SEQ-07 Notebook Ingest\u00e3o Camada Gold Respons\u00e1vel pela ingest\u00e3o dos dados na camada gold no formato de dimens\u00f5es e fatos. SEQ-08 Notebook An\u00e1lise dos Dados Respons\u00e1vel pela an\u00e1lise dos dados da camada gold. SEQ-09 Notebook Carga Dados Azure SQL Respons\u00e1vel por carregar os dados no Azure SQL Database para o schema DW."},{"location":"2_provisionando_azure_sql/","title":"Projeto BI Zero TO DW","text":""},{"location":"2_provisionando_azure_sql/#2-provisionamento-do-azure-sql-databese","title":"2 - Provisionamento do Azure SQL Databese","text":""},{"location":"2_provisionando_azure_sql/#21-provisionar-o-azure-sql-database","title":"2.1 - Provisionar o Azure SQL Database","text":"<p>Primeiro passo para realizar o provisionamento \u00e9 voc\u00ea possuir uma conta na Azure e em seguida ter provisionado um Resource Group dentro da sua conta.</p> <p>O provisionamento do Resource Group n\u00e3o ser\u00e1 abordado nesse treinamento, por\u00e9m deixo um link para voc\u00ea aprender como que \u00e9 feito.</p> <p>Provisionando o Resouce Group</p> <p>Ap\u00f3s provisionar o Resource Group, vamos partir para o Azure SQL Server.</p> <p>Depois de logar em sua conta da Azure, vamos seguir os passos:</p> <p>Existem diversas formas de provisionar um recurso.</p> <p>2.1.1 - Clicar em CREATE A RESOURCE</p> <p></p> <p>2.1.2 - Vamos procurar o Azure SQL Database. Para isso, na barra SOURCE, vamos digitar AZURE SQL DATABASE.</p> <p></p> <p>2.1.3 - Pr\u00f3ximo passo \u00e9 clicar em AZURE SQL.</p> <p></p> <p>2.1.4 - Nessa etapa basta clicar em CREATE.</p> <p></p> <p>2.1.5 - Por \u00faltimo, selecionar SINGLE DATABASE e depois clicar em CREATE.</p> <p></p>"},{"location":"2_provisionando_azure_sql/#22-definindo-nome-do-servidor-e-banco","title":"2.2 - Definindo Nome do Servidor e Banco","text":"<p>Nessa tela, vamos precisar definir as seguintes informa\u00e7\u00f5es:</p> <ul> <li>Subscription;</li> <li>Resource Group;</li> <li>Nome do Servidor (definido na pr\u00f3xima tela);</li> <li>Modo de Autentica\u00e7\u00e3o (definido na pr\u00f3xima tela);</li> <li>Nome do Banco de Dados.</li> </ul> <p>As demais informa\u00e7\u00f5es na aba Basics vou manter o default.</p> <p></p>"},{"location":"2_provisionando_azure_sql/#23-definindo-informacoes-do-servidor","title":"2.3 - Definindo Informa\u00e7\u00f5es do Servidor","text":"<p>Nessa tela vamos precisar definir as seguintes informa\u00e7\u00f5es:</p> <ul> <li>Nome do Servidor;</li> <li>Regi\u00e3o do Azure;</li> <li>Modo de Autentica\u00e7\u00e3o;</li> <li>Nome do Banco de Dados.</li> </ul> <p>As demais informa\u00e7\u00f5es na aba Basics vou manter o default.</p> <p></p>"},{"location":"2_provisionando_azure_sql/#24-configuracoes-de-rede","title":"2.4 - Configura\u00e7\u00f5es de Rede","text":"<p>Na aba Netwoking segue as configura\u00e7\u00f5es:</p> <ul> <li> <p>2.4.1 - Em connectivity method: </p> <ul> <li>Public Endpoint</li> </ul> </li> <li> <p>2.4.2 - Em firewall rules: </p> <ul> <li>Allow Azure services and resources to access this server - NO</li> <li>Add current client IP address - YES</li> </ul> </li> <li> <p>2.4.3 - Em connection policy</p> <ul> <li>Proxy</li> </ul> </li> </ul> <p>As demais informa\u00e7\u00f5es na aba Basics vou manter o default.</p> <p></p>"},{"location":"2_provisionando_azure_sql/#25-finalizando-provisionamento","title":"2.5 - Finalizando Provisionamento","text":"<p>Ao clicar em CREATE, o recurso ser\u00e1 provisionado.</p> <p></p>"},{"location":"3_configuracao_ambiente_azure_sql/","title":"Projeto BI Zero TO DW","text":""},{"location":"3_configuracao_ambiente_azure_sql/#3-configurando-o-ambiente-azure-sql-database","title":"3 - Configurando o Ambiente Azure SQL Database","text":"<p>Essa etapa \u00e9 respons\u00e1vel pela cria\u00e7\u00e3o das tabelas no banco Azure SQL Database.</p>"},{"location":"3_configuracao_ambiente_azure_sql/#seq-31-tabelas-azure-sql-database","title":"SEQ-3.1 - Tabelas Azure SQL Database.","text":"<p>Pr\u00e9-Requisito para cria\u00e7\u00e3o da estrutura do Azure SQL Database.</p> Sequ\u00eancia A\u00e7\u00e3o Detalhamento SEQ-2.1 Provisionamento do Azure SQL Provisionamento de um banco de dados no Azure Banco de Dados Schema Tabela Descri\u00e7\u00e3o srv-db-treinamentosql dbo TB_FORMA_PAGAMENTO Armazena informa\u00e7\u00f5es de forma de pagamento. srv-db-treinamentosql dbo TB_CATEGORIA_PRODUTO Armazena informa\u00e7\u00f5es das categorias dos produtos srv-db-treinamentosql dbo TB_PRODUTO Armazena informa\u00e7\u00f5es de produtos. srv-db-treinamentosql dbo TB_CLIENTE Armazena informa\u00e7\u00f5es de clientes. srv-db-treinamentosql dbo TB_VENDEDOR Armazena informa\u00e7\u00f5es de vendedores. srv-db-treinamentosql dbo TB_LOJA Armazena informa\u00e7\u00f5es de lojas. srv-db-treinamentosql dbo TB_VENDA Armazenada informa\u00e7\u00f5es de vendas. srv-db-treinamentosql dbo TB_ITEM_VENDA Armazena informa\u00e7\u00f5es sobre os itens que foram vendidos."},{"location":"3_configuracao_ambiente_azure_sql/#seq-32-modelo-de-dados","title":"SEQ-3.2 - Modelo de Dados","text":""},{"location":"3_configuracao_ambiente_azure_sql/#seq-33-script-create-table","title":"SEQ-3.3 - Script CREATE TABLE","text":"<p>Esse script pode ser encontrado em: Script de Cria\u00e7\u00e3o de Tabelas</p> <pre><code>CREATE TABLE dbo.TB_FORMA_PAGAMENTO\n(\nCODIGO_FORMA_PAGAMENTO   SMALLINT NOT NULL IDENTITY(1,1)\n,DESCRICAO_FORMA_PAGAMENTO VARCHAR(100) NOT NULL\n)\nGO\nALTER TABLE dbo.TB_FORMA_PAGAMENTO ADD CONSTRAINT [PK_TB_FORMA_PAGAMENTO] PRIMARY KEY (CODIGO_FORMA_PAGAMENTO)\nGO\n\nCREATE TABLE dbo.TB_CATEGORIA_PRODUTO\n(\nCODIGO_CATEGORIA SMALLINT NOT NULL IDENTITY(1,1)\n,DECRICAO_CATEGORIA VARCHAR(100) NOT NULL\n)\nGO\nALTER TABLE dbo.TB_CATEGORIA_PRODUTO ADD CONSTRAINT [PK_TB_CATEGORIA_PRODUTO] PRIMARY KEY (CODIGO_CATEGORIA)\nGO\n\nCREATE TABLE dbo.TB_PRODUTO\n(\nCODIGO_PRODUTO   SMALLINT NOT NULL IDENTITY(1,1)\n,DESCRICAO_PRODUTO   VARCHAR(100) NOT NULL\n,CODIGO_CATEGORIA SMALLINT\n)\nGO\nALTER TABLE dbo.TB_PRODUTO ADD CONSTRAINT [PK_TB_PRODUTO] PRIMARY KEY (CODIGO_PRODUTO)\nGO\nALTER TABLE dbo.TB_PRODUTO ADD CONSTRAINT [FK_TB_PRODUTO_CATEGORIA_PRODUTO] FOREIGN KEY (CODIGO_CATEGORIA) REFERENCES dbo.TB_CATEGORIA_PRODUTO (CODIGO_CATEGORIA)\nGO\nCREATE NONCLUSTERED INDEX [IX_01] ON dbo.TB_PRODUTO(CODIGO_CATEGORIA)\nGO\n\nCREATE TABLE dbo.TB_CLIENTE\n(\nCODIGO_CLIENTE SMALLINT NOT NULL IDENTITY(1,1)\n,NOME_CLIENTE VARCHAR(100) NOT NULL\n)\nGO\nALTER TABLE dbo.TB_CLIENTE ADD CONSTRAINT [PK_TB_CLIENTE] PRIMARY KEY (CODIGO_CLIENTE)\nGO\n\nCREATE TABLE dbo.TB_VENDEDOR\n(\nCODIGO_VENDEDOR SMALLINT NOT NULL IDENTITY(1,1)\n,NOME_VENDEDOR VARCHAR(100) NOT NULL\n)\nGO\nALTER TABLE dbo.TB_VENDEDOR ADD CONSTRAINT [PK_CODIGO_VENDEDOR] PRIMARY KEY (CODIGO_VENDEDOR)\nGO\n\nCREATE TABLE dbo.TB_LOJA\n(\nCODIGO_LOJA  SMALLINT NOT NULL IDENTITY(1,1)\n,NOME_LOJA   VARCHAR(100) NOT NULL\n,LOCALIDADE_LOJA     VARCHAR(100) NOT NULL\n,TIPO_LOJA VARCHAR(100) NOT NULL\n)\nGO\nALTER TABLE dbo.TB_LOJA ADD CONSTRAINT [PK_TB_LOJA] PRIMARY KEY (CODIGO_LOJA)\nGO\n\nCREATE TABLE dbo.TB_VENDA\n(\nCODIGO_VENDA SMALLINT NOT NULL IDENTITY(1,1)    \n,DATA_VENDA DATETIME NOT NULL \n,CODIGO_CLIENTE SMALLINT\n,CODIGO_VENDEDOR    SMALLINT\n,CODIGO_LOJA    SMALLINT\n,VALOR_FINAL DECIMAL(18,2)  \n,FORMA_PAGAMENTO    SMALLINT\n,TIPO_PAGAMENTO VARCHAR(100) NOT NULL\n)\nGO\n\nALTER TABLE dbo.TB_VENDA ADD CONSTRAINT [PK_TB_VENDA] PRIMARY KEY (CODIGO_VENDA)\nGO\nALTER TABLE dbo.TB_VENDA ADD CONSTRAINT [FK_TB_VENDA_CLIENTE] FOREIGN KEY (CODIGO_CLIENTE) REFERENCES dbo.TB_CLIENTE (CODIGO_CLIENTE)\nGO\nALTER TABLE dbo.TB_VENDA ADD CONSTRAINT [FK_TB_VENDA_FORMA_PAGAMENTO] FOREIGN KEY (FORMA_PAGAMENTO) REFERENCES dbo.TB_FORMA_PAGAMENTO (CODIGO_FORMA_PAGAMENTO)\nGO\nALTER TABLE dbo.TB_VENDA ADD CONSTRAINT [FK_TB_VENDA_VENDEDOR] FOREIGN KEY (CODIGO_VENDEDOR) REFERENCES dbo.TB_VENDEDOR (CODIGO_VENDEDOR)\nGO\nALTER TABLE dbo.TB_VENDA ADD CONSTRAINT [FK_TB_VENDA_LOJA] FOREIGN KEY (CODIGO_LOJA) REFERENCES dbo.TB_LOJA (CODIGO_LOJA)\nGO\n\nCREATE NONCLUSTERED INDEX [IX_01] ON dbo.TB_VENDA(CODIGO_CLIENTE)\nGO\nCREATE NONCLUSTERED INDEX [IX_02] ON dbo.TB_VENDA(FORMA_PAGAMENTO)\nGO\nCREATE NONCLUSTERED INDEX [IX_03] ON dbo.TB_VENDA(CODIGO_VENDEDOR)\nGO\nCREATE NONCLUSTERED INDEX [IX_04] ON dbo.TB_VENDA(CODIGO_LOJA)\nGO\n\n\nCREATE TABLE dbo.TB_ITEM_VENDA\n(\nCODIGO_VENDA SMALLINT NOT NULL \n,CODIGO_PRODUTO SMALLINT NOT NULL \n,VALOR_UNITARIO DECIMAL(18,2)   \n,QUANTIDADE SMALLINT\n,VALOR_FINAL DECIMAL(18,2)\n)\nGO\n\nALTER TABLE dbo.TB_ITEM_VENDA ADD CONSTRAINT [PK_TB_ITEM_VENDA] PRIMARY KEY (CODIGO_VENDA,CODIGO_PRODUTO)\nGO\nALTER TABLE dbo.TB_ITEM_VENDA ADD CONSTRAINT [FK_TB_VENDA_ITEM_VENDA] FOREIGN KEY (CODIGO_VENDA) REFERENCES dbo.TB_VENDA (CODIGO_VENDA)\nGO\nALTER TABLE dbo.TB_ITEM_VENDA ADD CONSTRAINT [FK_TB_ITEM_VENDA_PRODUTO] FOREIGN KEY (CODIGO_PRODUTO) REFERENCES dbo.TB_PRODUTO (CODIGO_PRODUTO)\nGO\n\nCREATE NONCLUSTERED INDEX [IX_01] ON dbo.TB_ITEM_VENDA(CODIGO_VENDA)\nGO\nCREATE NONCLUSTERED INDEX [IX_02] ON dbo.TB_ITEM_VENDA(CODIGO_PRODUTO)\nGO\n</code></pre>"},{"location":"4_configuracao_ambiente_databricks/","title":"Projeto BI Zero TO DW","text":""},{"location":"4_configuracao_ambiente_databricks/#4-configurando-o-ambiente-databricks","title":"4 - Configurando o Ambiente Databricks","text":"<p>\u00c9 nessa etapa que \u00e9 realizada a configura\u00e7\u00e3o do ambiente Databricks para ingest\u00e3o dos dados.</p> <p>S\u00e3o elas:</p> Sequ\u00eancia A\u00e7\u00e3o Detalhamento SEQ-4.0 Importa\u00e7\u00e3o de Bibliotecas Defini\u00e7\u00e3o de quais bibliotecas estar\u00e3o sendo usada SEQ-4.0.1 Importa\u00e7\u00e3o de Notebook Externo Ser\u00e1 usado para criar a tabela Dimens\u00e3o Tempo SEQ-4.1 Configura\u00e7\u00e3o do ambiente no Databricks Cria\u00e7\u00e3o do storage \"dbfs:/FileStore/tables/landing_zone\" SEQ-4.2 / SEQ-4.3 / SEQ-4.4 Cria\u00e7\u00e3o de Schemas (Bancos de Dados) Cria\u00e7\u00e3o das Camadas Bronze, Silver e Gold SEQ-4.5 / SEQ-4.6 / SEQ-4.7 Cria\u00e7\u00e3o das Tabelas Cria\u00e7\u00e3o das Tabelas das Camadas Bronze, Silver e Gold SEQ-4.8 Cria\u00e7\u00e3o Script Dimens\u00e3o Tempo Gera\u00e7\u00e3o de Scripts de Insert para a Dimens\u00e3o Tempo para o m\u00eas de Jul/2023 SEQ-4.9 Visualizando a Estrutura de uma tabela Identificando informa\u00e7\u00f5es de nome da coluna, datatype, nulabilidade, descri\u00e7\u00e3o das colunas SEQ-4.10 Visualizando inform\u00e7oes de armazenamento de uma tabela Idenfica\u00e7\u00e3o de quando a tabela foi criada, onde ela \u00e9 armazenada etc. SEQ-4.11 Visualizando a Estrutura de uma schema Informa\u00e7\u00f5es do Schema <p>O arquivo do Notebook \u00e9 encontrado aqui. Notebook Configura\u00e7\u00e3o Ambiente Databricks</p>"},{"location":"4_configuracao_ambiente_databricks/#seq-40-importacao-de-bibliotecas","title":"SEQ-4.0 - Importa\u00e7\u00e3o de Bibliotecas","text":"<pre><code>from pyspark.sql.functions import *\nfrom datetime import date, timedelta\n</code></pre>"},{"location":"4_configuracao_ambiente_databricks/#seq-401-importando-notebook-externo","title":"SEQ-4.0.1 - Importando Notebook Externo","text":"<pre><code>%run /estudos/libs/bibliotecas\n</code></pre>"},{"location":"4_configuracao_ambiente_databricks/#seq-41-criacao-camada-landing-zone","title":"SEQ-4.1 - Cria\u00e7\u00e3o Camada Landing Zone","text":"<p>Nessa etapa que \u00e9 realizada a cria\u00e7\u00e3o de uma \u00e1rea no HDFS do Databricks para salvar em formato parquet os dados exportados do Azure SQL Database.</p> <p>Nome do Diret\u00f3rio: dbfs:/FileStore/tables/landing_zone</p> <pre><code>diretorio_landing_zone = \"dbfs:/FileStore/tables/landing_zone\"\n\ntry:\n    dbutils.fs.ls(diretorio_landing_zone)\n    dbutils.fs.rm(diretorio_landing_zone, True)\n\nexcept:\n\n    print(f\"O diret\u00f3rio {diretorio_landing_zone} n\u00e3o existe.\")\n\n</code></pre> <pre><code>try:\n\n    dbutils.fs.ls(diretorio_landing_zone)\n\nexcept:\n\n    print(f\"O diret\u00f3rio {diretorio_landing_zone} n\u00e3o existe e ser\u00e1 criado.\")\n    dbutils.fs.mkdirs(diretorio_landing_zone)\n</code></pre>"},{"location":"4_configuracao_ambiente_databricks/#seq-42-criacao-schema-de-dados-bronze","title":"SEQ-4.2 - Cria\u00e7\u00e3o Schema de Dados \"bronze\"","text":"<p>Cria\u00e7\u00e3o do Schema de Dados \"bronze\" para armazenamento dos dados ingeridos a partir da leituda dos arquivos de dados exportados do Azure SQL Database.</p> <p>Trata-se de uma camada transiente, ou seja, \u00e9 o momento em que os dados s\u00e3o carregados em sua totalidade sem a aplica\u00e7\u00e3o de tratamentos. </p> <p>Gosto de definir essa etapa como a transposi\u00e7\u00e3o dos arquivos em tabelas, usando o mesmo nome para criar as tabelas e colunas. </p> <p>Nenhum tratamento \u00e9 aplicado sobre os dados.</p> <p>As tabelas s\u00e3o TRUNCADAS (limpas) sempre a cada ciclo de carga.</p> <p>A sintaxe do script de cria\u00e7\u00e3o de um Schema.</p> <p></p> <pre><code>%sql\nDROP SCHEMA IF EXISTS bronze CASCADE;\n</code></pre> <pre><code>%sql\nCREATE SCHEMA IF NOT EXISTS bronze COMMENT 'SCHEMA (Banco de Dados) referente a Camada BRONZE.';\n</code></pre>"},{"location":"4_configuracao_ambiente_databricks/#seq-43-criacao-schema-de-dados-silver","title":"SEQ-4.3 - Cria\u00e7\u00e3o Schema de Dados \"silver\"","text":"<p>Cria\u00e7\u00e3o do Schema de Dados \"silver\" para armazenamento dos dados ingeridos da camada bronze.</p> <p>Nessa camada os dados sofreram transforma\u00e7\u00f5es (aplica\u00e7\u00f5es de regras de neg\u00f3cio) e estar\u00e3o dispon\u00edveis para que seja criada a camada dimensional.</p> <pre><code>%sql\nDROP SCHEMA IF EXISTS silver CASCADE;\n</code></pre> <pre><code>%sql\nCREATE SCHEMA IF NOT EXISTS silver COMMENT 'SCHEMA (Banco de Dados) referente a Camada SILVER.';\n</code></pre>"},{"location":"4_configuracao_ambiente_databricks/#seq-44-criacao-schema-de-dados-gold","title":"SEQ-4.4 - Cria\u00e7\u00e3o Schema de Dados \"gold\"","text":"<p>Cria\u00e7\u00e3o do Schema de Dados \"gold\" para armazenamento dos dados ap\u00f3s a ingest\u00e3o dos dados na camada silver.</p> <p>Nessa camada os objetos ser\u00e3o modelados como dimens\u00f5es e fatos.</p> <pre><code>%sql\nDROP SCHEMA IF EXISTS gold CASCADE;\n</code></pre> <pre><code>%sql\nCREATE SCHEMA IF NOT EXISTS gold COMMENT 'SCHEMA (Banco de Dados) referente a Camada GOLD.';\n</code></pre> <p>Documenta\u00e7\u00e3o Create Schema Databricks</p>"},{"location":"4_configuracao_ambiente_databricks/#seq-45-create-table-schema-bronze","title":"SEQ-4.5 - CREATE TABLE schema \"bronze\"","text":"<p>Cria\u00e7\u00e3o das tabelas no Schema de Dados \"bronze\" com a mesma estrutura dos arquivos.</p> <p>Nessa etapa, as tabelas ser\u00e3o criadas as tabelas no Schema bronze.</p> <p>A sintaxe do script \u00e9 muito parecida com que possu\u00edmos em bancos de dados.</p> <p></p> <pre><code>%sql\n\nDROP  TABLE IF EXISTS bronze.tb_forma_pagamento;\nCREATE TABLE bronze.tb_forma_pagamento\n(\nCODIGO_FORMA_PAGAMENTO   INT COMMENT 'C\u00f3digo da Forma de Pagamento na Tabela TB_FORMA_PAGAMENTO.'\n,DESCRICAO_FORMA_PAGAMENTO VARCHAR(100) COMMENT 'Descri\u00e7\u00e3o da Forma de Pagamento na Tabela TB_FORMA_PAGAMENTO.'\n)\nCOMMENT 'Armazena informa\u00e7\u00f5es de forma de pagamento.';\n\nDROP  TABLE IF EXISTS bronze.tb_categoria_produto;\nCREATE TABLE bronze.tb_categoria_produto\n(\nCODIGO_CATEGORIA INT COMMENT 'C\u00f3digo da Categoria do Produto.'\n,DECRICAO_CATEGORIA VARCHAR(100) COMMENT 'Descri\u00e7\u00e3o da Categoria do Produto.'\n)\nCOMMENT 'Armazena informa\u00e7\u00f5es das categorias dos produtos';\n\nDROP  TABLE IF EXISTS bronze.tb_produto;\nCREATE TABLE bronze.tb_produto\n(\nCODIGO_PRODUTO   INT  COMMENT 'C\u00f3digo do Produto.'\n,DESCRICAO_PRODUTO   VARCHAR(100) COMMENT 'Descri\u00e7\u00e3o do Produto.'\n,CODIGO_CATEGORIA INT COMMENT 'Categoria do Produto.'\n)\nCOMMENT '   Armazena informa\u00e7\u00f5es de produtos.';\n\nDROP  TABLE IF EXISTS bronze.tb_cliente;\nCREATE TABLE bronze.tb_cliente\n(\nCODIGO_CLIENTE INT COMMENT 'C\u00f3digo do Cliente.'\n,NOME_CLIENTE VARCHAR(100) COMMENT 'Nome do Cliente.'\n)\nCOMMENT 'Armazena informa\u00e7\u00f5es de clientes.';\n\nDROP  TABLE IF EXISTS bronze.tb_vendedor;\nCREATE TABLE bronze.tb_vendedor\n(\nCODIGO_VENDEDOR INT COMMENT 'C\u00f3digo do Vendedor.'\n,NOME_VENDEDOR VARCHAR(100) COMMENT 'Nome do Vendedor.'\n)\nCOMMENT 'Armazena informa\u00e7\u00f5es de vendedores.';\n\nDROP  TABLE IF EXISTS bronze.tb_loja;\nCREATE TABLE bronze.tb_loja\n(\nCODIGO_LOJA  INT COMMENT 'C\u00f3digo da Loja.'\n,NOME_LOJA   VARCHAR(100) COMMENT 'Nome da Loja.'\n,LOCALIDADE_LOJA     VARCHAR(100) COMMENT 'Localidade da Loja.'\n,TIPO_LOJA VARCHAR(100) COMMENT 'Tipo da Loja.'\n)\nCOMMENT 'Armazena informa\u00e7\u00f5es de lojas.';\n\nDROP  TABLE IF EXISTS bronze.tb_venda;\nCREATE TABLE bronze.tb_venda\n(\nCODIGO_VENDA INT COMMENT 'C\u00f3digo da Venda.'\n,DATA_VENDA TIMESTAMP COMMENT 'Data da Venda'\n,CODIGO_CLIENTE INT COMMENT 'C\u00f3digo do Cliente.'\n,CODIGO_VENDEDOR    INT COMMENT 'C\u00f3digo do Vendedor.'\n,CODIGO_LOJA    INT COMMENT 'C\u00f3digo da Loja.'\n,VALOR_FINAL DECIMAL(18,2)   COMMENT 'Valor Total da Venda.'\n,FORMA_PAGAMENTO    INT COMMENT 'Forma de Pagamento.'\n,TIPO_PAGAMENTO VARCHAR(100) COMMENT 'Tipo de Pagamento.'\n)\nCOMMENT 'Armazenada informa\u00e7\u00f5es de vendas.';\n\nDROP  TABLE IF EXISTS bronze.tb_item_venda;\nCREATE TABLE bronze.tb_item_venda\n(\nCODIGO_VENDA INT COMMENT 'C\u00f3digo da Venda.'\n,CODIGO_PRODUTO INT COMMENT 'C\u00f3digo do Produto.'\n,VALOR_UNITARIO DECIMAL(18,2)    COMMENT 'Valor Unit\u00e1rio do Produto.'\n,QUANTIDADE INT COMMENT 'Quantidade do Produto Vendido.'\n,VALOR_FINAL DECIMAL(18,2) COMMENT 'Valor Final do Produto Vendido.'\n)\nCOMMENT 'Armazena informa\u00e7\u00f5es sobre os itens que foram vendidos.';\n</code></pre>"},{"location":"4_configuracao_ambiente_databricks/#seq-46-create-table-schema-silver","title":"SEQ-4.6 - CREATE TABLE schema \"silver\"","text":"<p>Cria\u00e7\u00e3o das tabelas no Schema de Dados \"silver\".</p> <pre><code>%sql\n\nDROP  TABLE IF EXISTS silver.tb_forma_pagamento;\nCREATE TABLE silver.tb_forma_pagamento\n(\nCODIGO_FORMA_PAGAMENTO   INT COMMENT 'C\u00f3digo da Forma de Pagamento na Tabela TB_FORMA_PAGAMENTO.'\n,DESCRICAO_FORMA_PAGAMENTO VARCHAR(100) COMMENT 'Descri\u00e7\u00e3o da Forma de Pagamento na Tabela TB_FORMA_PAGAMENTO.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n)\nCOMMENT 'Armazena informa\u00e7\u00f5es de forma de pagamento.';\n\nDROP  TABLE IF EXISTS silver.tb_categoria_produto;\nCREATE TABLE silver.tb_categoria_produto\n(\nCODIGO_CATEGORIA INT COMMENT 'C\u00f3digo da Categoria do Produto.'\n,DECRICAO_CATEGORIA VARCHAR(100) COMMENT 'Descri\u00e7\u00e3o da Categoria do Produto.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n)\nCOMMENT 'Armazena informa\u00e7\u00f5es das categorias dos produtos';\n\nDROP  TABLE IF EXISTS silver.tb_produto;\nCREATE TABLE silver.tb_produto\n(\nCODIGO_PRODUTO   INT  COMMENT 'C\u00f3digo do Produto.'\n,DESCRICAO_PRODUTO   VARCHAR(100) COMMENT 'Descri\u00e7\u00e3o do Produto.'\n,CODIGO_CATEGORIA INT COMMENT 'Categoria do Produto.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n)\nCOMMENT '   Armazena informa\u00e7\u00f5es de produtos.';\n\nDROP  TABLE IF EXISTS silver.tb_cliente;\nCREATE TABLE silver.tb_cliente\n(\nCODIGO_CLIENTE INT COMMENT 'C\u00f3digo do Cliente.'\n,NOME_CLIENTE VARCHAR(100) COMMENT 'Nome do Cliente.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n)\nCOMMENT 'Armazena informa\u00e7\u00f5es de clientes.';\n\nDROP  TABLE IF EXISTS silver.tb_vendedor;\nCREATE TABLE silver.tb_vendedor\n(\nCODIGO_VENDEDOR INT COMMENT 'C\u00f3digo do Vendedor.'\n,NOME_VENDEDOR VARCHAR(100) COMMENT 'Nome do Vendedor.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n)\nCOMMENT 'Armazena informa\u00e7\u00f5es de vendedores.';\n\nDROP  TABLE IF EXISTS silver.tb_loja;\nCREATE TABLE silver.tb_loja\n(\nCODIGO_LOJA  INT COMMENT 'C\u00f3digo da Loja.'\n,NOME_LOJA   VARCHAR(100) COMMENT 'Nome da Loja.'\n,LOCALIDADE_LOJA     VARCHAR(100) COMMENT 'Localidade da Loja.'\n,TIPO_LOJA VARCHAR(100) COMMENT 'Tipo da Loja.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n)\nCOMMENT 'Armazena informa\u00e7\u00f5es de lojas.';\n\nDROP  TABLE IF EXISTS silver.tb_venda;\nCREATE TABLE silver.tb_venda\n(\nCODIGO_VENDA INT COMMENT 'C\u00f3digo da Venda.'\n,DATA_VENDA TIMESTAMP COMMENT 'Data da Venda'\n,CODIGO_CLIENTE INT COMMENT 'C\u00f3digo do Cliente.'\n,CODIGO_VENDEDOR    INT COMMENT 'C\u00f3digo do Vendedor.'\n,CODIGO_LOJA    INT COMMENT 'C\u00f3digo da Loja.'\n,VALOR_FINAL DECIMAL(18,2)   COMMENT 'Valor Total da Venda.'\n,FORMA_PAGAMENTO    INT COMMENT 'Forma de Pagamento.'\n,TIPO_PAGAMENTO VARCHAR(100) COMMENT 'Tipo de Pagamento.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n)\nCOMMENT 'Armazenada informa\u00e7\u00f5es de vendas.';\n\nDROP  TABLE IF EXISTS silver.tb_item_venda;\nCREATE TABLE silver.tb_item_venda\n(\nCODIGO_VENDA INT COMMENT 'C\u00f3digo da Venda.'\n,CODIGO_PRODUTO INT COMMENT 'C\u00f3digo do Produto.'\n,VALOR_UNITARIO DECIMAL(18,2)    COMMENT 'Valor Unit\u00e1rio do Produto.'\n,QUANTIDADE INT COMMENT 'Quantidade do Produto Vendido.'\n,VALOR_FINAL DECIMAL(18,2) COMMENT 'Valor Final do Produto Vendido.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n)\nCOMMENT 'Armazena informa\u00e7\u00f5es sobre os itens que foram vendidos.';\n</code></pre>"},{"location":"4_configuracao_ambiente_databricks/#seq-47-create-table-schema-gold","title":"SEQ-4.7 - CREATE TABLE schema \"gold\"","text":"<p>Cria\u00e7\u00e3o das tabelas no Schema de Dados \"gold\".</p> <pre><code>%sql\n\nDROP  TABLE IF EXISTS gold.dim_forma_pagamento;\nCREATE TABLE gold.dim_forma_pagamento\n(\nID_FORMA_PAGAMENTO VARCHAR(100) COMMENT 'Chave da Dimens\u00e3o Forma de Pagamento.'\n,CODIGO_FORMA_PAGAMENTO  INT COMMENT 'C\u00f3digo da Forma de Pagamento na Tabela TB_FORMA_PAGAMENTO.'\n,DESCRICAO_FORMA_PAGAMENTO VARCHAR(100) COMMENT 'Descri\u00e7\u00e3o da Forma de Pagamento na Tabela TB_FORMA_PAGAMENTO.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n);\n\nDROP  TABLE IF EXISTS gold.dim_categoria_produto;\nCREATE TABLE gold.dim_categoria_produto\n(\nID_CATEGORIA_PRODUTO VARCHAR(100) COMMENT 'Chave da Dimens\u00e3o Categoria do Produto.'\n,CODIGO_CATEGORIA INT COMMENT 'C\u00f3digo da Categoria do Produto.'\n,DECRICAO_CATEGORIA VARCHAR(100) COMMENT 'Descri\u00e7\u00e3o da Categoria do Produto.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n);\n\nDROP  TABLE IF EXISTS gold.dim_produto;\nCREATE TABLE gold.dim_produto\n(\nID_PRODUTO VARCHAR(100) COMMENT 'Chave da Dimens\u00e3o Produto.'\n,CODIGO_PRODUTO  INT  COMMENT 'C\u00f3digo do Produto.'\n,DESCRICAO_PRODUTO   VARCHAR(100) COMMENT 'Descri\u00e7\u00e3o do Produto.'\n,CODIGO_CATEGORIA INT COMMENT 'Categoria do Produto.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n);\n\nDROP  TABLE IF EXISTS gold.dim_cliente;\nCREATE TABLE gold.dim_cliente\n(\nID_CLIENTE VARCHAR(100) COMMENT 'Chave da Dimens\u00e3o Cliente.'\n,CODIGO_CLIENTE INT COMMENT 'C\u00f3digo do Cliente.'\n,NOME_CLIENTE VARCHAR(100) COMMENT 'Nome do Cliente.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n);\n\nDROP  TABLE IF EXISTS gold.dim_vendedor;\nCREATE TABLE gold.dim_vendedor\n(\nID_VENDEDOR VARCHAR(100) COMMENT 'Chave da Dimens\u00e3o Vendedor.'\n,CODIGO_VENDEDOR INT COMMENT 'C\u00f3digo do Vendedor.'\n,NOME_VENDEDOR VARCHAR(100) COMMENT 'Nome do Vendedor.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n);\n\nDROP  TABLE IF EXISTS gold.dim_loja;\nCREATE TABLE gold.dim_loja\n(\nID_LOJA VARCHAR(100) COMMENT 'Chave da Dimens\u00e3o Loja.'\n,CODIGO_LOJA     INT COMMENT 'C\u00f3digo da Loja.'\n,NOME_LOJA   VARCHAR(100) COMMENT 'Nome da Loja.'\n,LOCALIDADE_LOJA     VARCHAR(100) COMMENT 'Localidade da Loja.'\n,TIPO_LOJA VARCHAR(100) COMMENT 'Tipo da Loja.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n);\n\nDROP  TABLE IF EXISTS gold.fato_venda;\nCREATE TABLE gold.fato_venda\n(\nID_TEMPO VARCHAR(100)  COMMENT 'Chave da Dimens\u00e3o Tempo.'\n,ID_CLIENTE VARCHAR(100)  COMMENT 'Chave da Dimens\u00e3o Cliente.'\n,ID_VENDEDOR VARCHAR(100) COMMENT 'Chave da Dimens\u00e3o Vendedor.'\n,ID_LOJA VARCHAR(100) COMMENT 'Chave da Dimens\u00e3o Loja.'\n,ID_FORMA_PAGAMENTO  VARCHAR(100) COMMENT 'Chave da Dimens\u00e3o Forma de Pagamento.'\n,ID_PRODUTO VARCHAR(100)  COMMENT 'Chave da Dimens\u00e3o Produto.'\n,ID_CATEGORIA_PRODUTO VARCHAR(100) COMMENT 'Chave da Dimens\u00e3o Categoria do Produto.'\n,CODIGO_VENDA INT COMMENT 'C\u00f3digo da Venda.'\n,QUANTIDADE INT COMMENT 'Quantidade vendida do produto.'\n,VALOR_UNITARIO DECIMAL(18,2)    COMMENT 'Valor unit\u00e1rio do produto.'\n,TIPO_PAGAMENTO VARCHAR(100) COMMENT 'Tipo de Pagamentto da Venda.'\n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n);\n\nDROP  TABLE IF EXISTS gold.dim_tempo;\nCREATE TABLE gold.dim_tempo\n(\nID_TEMPO VARCHAR(100) COMMENT 'Chave da Dimens\u00e3o Tempo.'\n,DATA VARCHAR(10) COMMENT 'Data.'\n,ANO INT COMMENT 'Ano referente a coluna data.'\n,MES    INT COMMENT 'M\u00eas referente a coluna data.'\n,DIA INT COMMENT 'Dia referente a coluna data.' \n,DATA_CADASTRO TIMESTAMP COMMENT 'Data de Cadastro do Registro.'\n,DATA_ALTERACAO TIMESTAMP COMMENT 'Data de Atualiza\u00e7\u00e3o do Registro.'\n);\n</code></pre>"},{"location":"4_configuracao_ambiente_databricks/#seq-48-insercao-dimensao-tempo","title":"SEQ-4.8 - Inser\u00e7\u00e3o Dimens\u00e3o Tempo","text":"<p>Script para inser\u00e7\u00e3o dos dados na Dimens\u00e3o Tempo.</p> <pre><code>data_inicial = date(2023, 6, 1)\ndata_fim = date(2023, 8, 1)\ndias_acrescimo = timedelta(days=1)\n\ncria_dimensao_tempo(data_inicial, data_fim, dias_acrescimo)\n</code></pre>"},{"location":"4_configuracao_ambiente_databricks/#seq-49-listando-as-tabelas-do-schema","title":"SEQ-4.9 - Listando as Tabelas do Schema","text":"<p>Script para visualizar todas as tabelas de um schema qualquer.</p> <pre><code>%sql\nSHOW TABLES FROM silver\n</code></pre>"},{"location":"4_configuracao_ambiente_databricks/#seq-410-visualizar-estrutura-de-tabela","title":"SEQ-4.10 - Visualizar Estrutura de Tabela","text":"<p>Script para visualizar a estrutura de uma tabela qualquer.</p> <pre><code>%sql\nDESC gold.DIM_LOJA\n</code></pre>"},{"location":"4_configuracao_ambiente_databricks/#seq-411-visualizar-armazenamento-de-uma-tabela","title":"SEQ-4.11 - Visualizar Armazenamento de uma Tabela","text":"<p>Script para visualizar informa\u00e7\u00f5es de armazenamento de uma tabela qualquer.</p> <pre><code>%sql\nDESC DETAIL gold.DIM_LOJA\n</code></pre>"},{"location":"4_configuracao_ambiente_databricks/#seq-411-visualizar-estrutura-de-schema","title":"SEQ-4.11 - Visualizar Estrutura de Schema","text":"<p>Script para visualizar a estrutura de um schema.</p> <pre><code>%sql\nDESC SCHEMA bronze\n</code></pre>"},{"location":"5_ingestao_dados_azure/","title":"Projeto BI Zero TO DW","text":""},{"location":"5_ingestao_dados_azure/#5-ingestao-dos-dados-do-azure-sql-databse","title":"5 - Ingest\u00e3o dos Dados do Azure SQL Databse","text":"<p>Pr\u00e9-Requisito para ingest\u00e3o dos dados do Azure SQL Database.</p> Sequ\u00eancia A\u00e7\u00e3o Detalhamento SEQ-2.1 Provisionamento do Azure SQL Provisionamento de um banco de dados no Azure SEQ-2.2 Configura\u00e7\u00e3o do Ambiente Azure Cria\u00e7\u00e3o de toda a estrutura de tabelas e dados <p>Atividades que ser\u00e3o realizadas nessa etapa.</p> Sequ\u00eancia A\u00e7\u00e3o Detalhamento SEQ-01 / SEQ-02 Configura\u00e7\u00e3o de Biblioteca Instala\u00e7\u00e3o da Biblioteca \"sqlalchemy\" SEQ-03 Consumindo Arquivo JSON Arquivo com as credenciais de acesso ao Azure SQL Database SEQ-04 Sela\u00e7\u00e3o das Tabelas Identificar quais ser\u00e3o as tabelas usadas durante o processo de ingest\u00e3o SEQ-05 Extra\u00e7\u00e3o dos Dados do Azure SQL Coleta dos Dados do Azure SQL SEQ-06 Persistir os Dados em Parquet Os dados dever\u00e3o ser persistidos no diret\u00f3rio de cada tabela em formato parquet. <p>O arquivo do Notebook \u00e9 encontrado aqui. Notebook Ingest\u00e3o Dados Azure SQL Database</p>"},{"location":"5_ingestao_dados_azure/#seq-51-configurando-bibliotaca-sqlalchemy","title":"SEQ-5.1 - Configurando Bibliotaca sqlalchemy","text":"<p>A biblioteca \"sqlalchemy\" ser\u00e1 usada para realizar a conex\u00e3o com o Azure SQL Database.</p> <pre><code>pip install sqlalchemy\n</code></pre>"},{"location":"5_ingestao_dados_azure/#seq-52-importando-das-bibliotecas","title":"SEQ-5.2 - Importando das bibliotecas","text":"<p>Sele\u00e7\u00e3o e Importa\u00e7\u00e3o das bibliotecas que ser\u00e3o usadas</p> <p>Validar se existe a necessidade de importar todas as bibliotecas.</p> <pre><code>from sqlalchemy import __version__ as sa_version, create_engine, text\nimport json\nimport pandas as pd\n</code></pre>"},{"location":"5_ingestao_dados_azure/#seq-53-arquivo-parametro-de-conexao-com-database","title":"SEQ-5.3 - Arquivo Par\u00e2metro de Conex\u00e3o com Database","text":"<p>Importa\u00e7\u00e3o do Arquivo JSON que ser\u00e1 usado para buscar informa\u00e7\u00f5es de conex\u00e3o com o Azure SQL Database</p> <p>Esse arquivo JSON ter\u00e1 a seguinte estrutura.</p> <p></p> <p>O arquivo ser\u00e1 lido e as informa\u00e7\u00f5es de servidor, banco de dados, usu\u00e1rio e senha ser\u00e3o armazenado nas vari\u00e1veis.</p> <p>Esse modo de trabalhar \u00e9 melhor pois voc\u00ea n\u00e3o exp\u00f5em as suas senhas e mant\u00e9m um \u00fanico ponto de altera\u00e7\u00e3o.</p> <p>No Azure voc\u00ea pode armazenar suas credenciais no Azure Key Vault.</p> <pre><code>dfjson =  pd.read_json(\"https://raw.githubusercontent.com/dbaassists/Projeto_BI_Zero_TO_DW/main/04_ARQUIVO_CONFIG/config_azure_sql.json\")\n\nserver = dfjson['Config']['server']\ndatabase = dfjson['Config']['database']\nusername = dfjson['Config']['username']\npassword = dfjson['Config']['password']\n</code></pre>"},{"location":"5_ingestao_dados_azure/#seq-54-extracao-dados-azure-sql-database","title":"SEQ-5.4 - Extra\u00e7\u00e3o Dados Azure SQL Database","text":"<p>Identifica\u00e7\u00e3o das Tabelas do Azure SQL Database que ser\u00e3o extra\u00eddas.</p> <p>Obs: Para esse nosso projeto, estaremos importando todas as tabelas do banco.</p> <pre><code>df = spark.read \\\n.format(\"jdbc\") \\\n.option(\"url\", f\"jdbc:sqlserver://{server};database={database}\") \\\n.option(\"query\", \"\"\"SELECT s.name + '.' +  t.NAME AS Nome_Tabela \n                        FROM sys.tables t\n                        INNER JOIN sys.schemas s\n                        ON t.schema_id = s.schema_id\"\"\") \\\n.option(\"user\", f\"{username}\") \\\n.option(\"password\", f\"{password}\") \\\n.load()\n</code></pre> <p>Visualizando o conte\u00fado retornado da execu\u00e7\u00e3o da consulta.</p> <pre><code>display(df)\n</code></pre>"},{"location":"5_ingestao_dados_azure/#seq-55-extracao-de-dados","title":"SEQ-5.5 - Extra\u00e7\u00e3o de Dados","text":"<p>Ap\u00f3s a extra\u00e7\u00e3o dos dados do Azure SQL Database, os dados ser\u00e3o persistidos na camada landing zone em formato parquet.</p> <p>Comentando um pouco o script abaixo:</p> <ul> <li>No fluxo abaixo, nosso processamento ir\u00e1 trabalhar em loop uma vez que j\u00e1 identificou os objetos que precisam ser extraidos no passo \"SEQ-5.4\" e agora ir\u00e1 realizar a consulta de todos eles e por \u00faltimo estar\u00e1 salvando os dados no diret\u00f3rio \"dbfs:/FileStore/tables/landing_zone/\" em formato parquet.</li> </ul> <pre><code>lista_tabelas = df.collect()\n\nfor tabela in lista_tabelas:\n\n    tabela_paquet = tabela['Nome_Tabela'].replace('dbo.','').lower()\n\n    print(tabela_paquet)\n\n    diretorio_parquet = \"dbfs:/FileStore/tables/landing_zone/{0}\".format(tabela_paquet)\n\n    df = (spark.read\n    .format(\"jdbc\")\n    .option(\"url\", f\"jdbc:sqlserver://{server};database={database}\") \\\n    .option(\"query\", \"SELECT * FROM {0}\".format(tabela['Nome_Tabela']))\n    .option(\"user\", f\"{username}\") \\\n    .option(\"password\", f\"{password}\") \\\n    .load()\n    )\n\n    (df.write\n    .format('parquet')\n    .mode(\"overwrite\")\n    .save(diretorio_parquet)\n    )\n</code></pre>"},{"location":"5_ingestao_dados_azure/#seq-56-firewall-azure-sql-database-liberando-acesso-ao-banco","title":"SEQ-5.6 - Firewall Azure SQL Database - Liberando acesso ao Banco","text":"<pre><code>exec sp_set_firewall_rule N'nome_regra', '0.0.0.0', '0.0.0.0'\n</code></pre> <p>Ou podemos fazer a libera\u00e7\u00e3o acessando o portal do Azure.</p> <p></p> <p>Depois realizamos o cadastro da regra.</p> <p></p>"},{"location":"5_ingestao_dados_azure/#seq-57-firewall-azure-sql-database-revogando-acesso-ao-banco","title":"SEQ-5.7 - Firewall Azure SQL Database - Revogando acesso ao Banco","text":"<pre><code>exec sp_delete_firewall_rule N'nome_regra'\n</code></pre> <p>Ou podemos fazer a revoga\u00e7\u00e3o acessando o portal do Azure.</p> <p></p> <p>Depois realizamos a entrada referente a regra.</p> <p></p>"},{"location":"6_ingestao_dados_camada_bronze/","title":"Projeto BI Zero TO DW","text":""},{"location":"6_ingestao_dados_camada_bronze/#6-ingestao-dos-dados-na-camada-bronze","title":"6 - Ingest\u00e3o dos Dados na Camada Bronze","text":"Sequ\u00eancia A\u00e7\u00e3o Detalhamento SEQ-6.1 / SEQ-6.2 Ingest\u00e3o dos Dados Identificar no storage \"dbfs:/FileStore/tables/landing_zone\" os dados a serem inseridos na camada BRONZE. <p>O arquivo do Notebook \u00e9 encontrado aqui. Notebook Ingest\u00e3o Dados Para Camada Bronze</p>"},{"location":"6_ingestao_dados_camada_bronze/#seq-61-origem-dos-dados-no-databricks","title":"SEQ-6.1 - Origem dos Dados no Databricks","text":"<p>Nessa etapa definimos onde os nossos dados foram armazenados na etapa de extra\u00e7\u00e3o de dados do Azure SQL Database.</p> <pre><code>diretorio_landing_zone = \"dbfs:/FileStore/tables/landing_zone/\"\narquivos_diretorio = dbutils.fs.ls(diretorio_landing_zone)\n</code></pre>"},{"location":"6_ingestao_dados_camada_bronze/#seq-62-carga-dados-camada-bronze","title":"SEQ-6.2 - Carga Dados Camada Bronze","text":"<p>Rotina de leitura dos arquivos e carga na camada bronze.</p> <pre><code>for arquivo in arquivos_diretorio:\n\n    diretorio = arquivo.path\n    tabela = arquivo.name.replace('/','').lower()\n\n    parDF1=spark.read.parquet(diretorio)\n\n    colunas = parDF1.columns\n    lista1 = ''\n    listaInsert = ''\n    listaCondicao = ''\n\n    for coluna in colunas:\n        if lista1 == '':\n            lista1 = coluna\n        else:\n            lista1 = lista1 + ',' + coluna\n\n    for coluna in colunas:\n        if listaInsert == '':\n            listaInsert = 'b.'+coluna\n        else:\n            listaInsert = listaInsert + ',' + 'b.'+ coluna\n\n    for coluna in colunas:\n        if listaCondicao == '':\n            listaCondicao =  'a.'+coluna + '= b.'+coluna\n\n    if tabela == 'tb_item_venda':\n        listaCondicao = listaCondicao + ' AND a.CODIGO_PRODUTO = b.CODIGO_PRODUTO'\n\n\n    tabela_dl = tabela.replace('dbo.','')\n\n    parDF1.createOrReplaceTempView(tabela)\n\n    comando_truncate = f\"\"\"TRUNCATE TABLE bronze.{tabela}\"\"\"\n\n    print(comando_truncate)\n\n    spark.sql(comando_truncate)\n\n    comando_insert = f\"\"\"MERGE INTO bronze.{tabela} a\n            USING {tabela} b\n            ON {listaCondicao}\n            WHEN NOT MATCHED\n            THEN INSERT ({lista1}) VALUES ({listaInsert})\n            \"\"\"\n\n    print(comando_insert)\n\n    spark.sql(comando_insert)\n</code></pre>"},{"location":"7_ingestao_dados_camada_silver/","title":"Projeto BI Zero TO DW","text":""},{"location":"7_ingestao_dados_camada_silver/#7-ingestao-dos-dados-na-camada-silver","title":"7 - Ingest\u00e3o dos Dados na Camada Silver","text":"Sequ\u00eancia A\u00e7\u00e3o Detalhamento SEQ-7.1 Fun\u00e7\u00e3o acentuacao Usada para remover a acentua\u00e7\u00e3o de campos do tipo STRING. SEQ-7.2 / SEQ-7.3 / SEQ-7.4 / SEQ-7.5 / SEQ-7.6 / SEQ-7.7 / SEQ-7.8 / SEQ-7.9 Ingest\u00e3o dos Dados da Camada Bronze para Silver Carga realizada baseada nos dados existentes nas tabelas da camada Bronze. SEQ-7.2 / SEQ-7.3 / SEQ-7.4 / SEQ-7.5 / SEQ-7.6 / SEQ-7.7 / SEQ-7.8 / SEQ-7.9 Tratamento de dados antes de inserir/atualizar Remover acentua\u00e7\u00e3o e caracteres especiais, valores nulos onde o datatype foi STRING, informar 'N/A', datatype NUM\u00c9RICO, informar 0 (zero) e datatype DATE/TIMESTAMP, informar '1900-01-01'. Todo os dados do tipo STRING devem estar dados em caixa alta. SEQ-7.2 / SEQ-7.3 / SEQ-7.4 / SEQ-7.5 / SEQ-7.6 / SEQ-7.7 / SEQ-7.8 / SEQ-7.9 Identificar a data de altera\u00e7\u00e3o ou cadastro Regra: Caso o registro n\u00e3o exista (caindo na condi\u00e7\u00e3o INSERT do MERGE), a data de cadastro e data de altera\u00e7\u00e3o devem ser a mesma, caso o registro exista, a data de altera\u00e7\u00e3o dever\u00e1 ser alterada. <p>O arquivo do Notebook \u00e9 encontrado aqui. Notebook Ingest\u00e3o Dados Para Camada Silver</p>"},{"location":"7_ingestao_dados_camada_silver/#seq-71-notebook-externo","title":"SEQ-7.1 - Notebook Externo","text":"<p>Nessa etapa \u00e9 realizada a importa\u00e7\u00e3o de um notebook externo que cont\u00e9m a fun\u00e7\u00e3o que ser\u00e1 usada para realizar o tratamento (remo\u00e7\u00e3o da acentua\u00e7\u00e3o) dos dados.</p> <pre><code>%run /estudos/libs/bibliotecas\n</code></pre>"},{"location":"7_ingestao_dados_camada_silver/#atividades-de-ingestao","title":"Atividades de Ingest\u00e3o","text":""},{"location":"7_ingestao_dados_camada_silver/#seq-72-ingestao-de-dados-na-camada-silver-de-tb_categoria_produto","title":"SEQ-7.2 - Ingest\u00e3o de Dados na camada \"silver\" de tb_categoria_produto","text":"<pre><code>%sql\nMERGE INTO silver.tb_categoria_produto a\nUSING (\nSELECT \nCODIGO_CATEGORIA\n,IFNULL(TRIM(acentuacao(DECRICAO_CATEGORIA)),'N/A') DECRICAO_CATEGORIA\nFROM bronze.tb_categoria_produto\n) b\n\nON a.CODIGO_CATEGORIA= b.CODIGO_CATEGORIA\n\nWHEN MATCHED THEN\nUPDATE SET \na.DECRICAO_CATEGORIA = b.DECRICAO_CATEGORIA\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT \n(\nCODIGO_CATEGORIA\n,DECRICAO_CATEGORIA\n,DATA_CADASTRO\n,DATA_ALTERACAO\n) \nVALUES \n(\nb.CODIGO_CATEGORIA\n,b.DECRICAO_CATEGORIA\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n</code></pre>"},{"location":"7_ingestao_dados_camada_silver/#seq-73-ingestao-de-dados-na-camada-silver-de-tb_cliente","title":"SEQ-7.3 - Ingest\u00e3o de Dados na camada \"silver\" de tb_cliente","text":"<pre><code>%sql\nMERGE INTO silver.tb_cliente a\nUSING (\nSELECT \nCODIGO_CLIENTE\n,IFNULL(TRIM(acentuacao(NOME_CLIENTE)),'N/A') NOME_CLIENTE\nFROM bronze.tb_cliente\n) b\n\nON a.CODIGO_CLIENTE= b.CODIGO_CLIENTE\n\nWHEN MATCHED THEN\nUPDATE SET \na.NOME_CLIENTE = b.NOME_CLIENTE\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT \n(\nCODIGO_CLIENTE\n,NOME_CLIENTE\n,DATA_CADASTRO\n,DATA_ALTERACAO\n)\nVALUES \n(\nb.CODIGO_CLIENTE\n,b.NOME_CLIENTE\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n</code></pre>"},{"location":"7_ingestao_dados_camada_silver/#seq-74-ingestao-de-dados-na-camada-silver-de-tb_forma_pagamento","title":"SEQ-7.4 - Ingest\u00e3o de Dados na camada \"silver\" de tb_forma_pagamento","text":"<pre><code>%sql\nMERGE INTO silver.tb_forma_pagamento a\nUSING (\nSELECT \nCODIGO_FORMA_PAGAMENTO\n,IFNULL(TRIM(acentuacao(DESCRICAO_FORMA_PAGAMENTO)),'N/A') DESCRICAO_FORMA_PAGAMENTO\nFROM bronze.tb_forma_pagamento\n) b\n\nON a.CODIGO_FORMA_PAGAMENTO= b.CODIGO_FORMA_PAGAMENTO\n\nWHEN MATCHED THEN\nUPDATE SET \na.DESCRICAO_FORMA_PAGAMENTO = b.DESCRICAO_FORMA_PAGAMENTO\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT \n(CODIGO_FORMA_PAGAMENTO\n,DESCRICAO_FORMA_PAGAMENTO\n,DATA_CADASTRO\n,DATA_ALTERACAO) \nVALUES \n(b.CODIGO_FORMA_PAGAMENTO\n,b.DESCRICAO_FORMA_PAGAMENTO\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n</code></pre>"},{"location":"7_ingestao_dados_camada_silver/#seq-75-ingestao-de-dados-na-camada-silver-de-tb_item_venda","title":"SEQ-7.5 - Ingest\u00e3o de Dados na camada \"silver\" de tb_item_venda","text":"<pre><code>%sql\nMERGE INTO silver.tb_item_venda a\nUSING (\nSELECT \nCODIGO_VENDA\n,CODIGO_PRODUTO\n,VALOR_UNITARIO\n,QUANTIDADE\n,VALOR_FINAL\nFROM bronze.tb_item_venda\n) b\n\nON a.CODIGO_VENDA= b.CODIGO_VENDA\nAND a.CODIGO_PRODUTO= b.CODIGO_PRODUTO\n\nWHEN MATCHED THEN\nUPDATE SET \na.VALOR_UNITARIO = b.VALOR_UNITARIO\n,a.QUANTIDADE = b.QUANTIDADE\n,a.VALOR_FINAL = b.VALOR_FINAL\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT \n(\nCODIGO_VENDA\n,CODIGO_PRODUTO\n,VALOR_UNITARIO\n,QUANTIDADE\n,VALOR_FINAL\n,DATA_CADASTRO\n,DATA_ALTERACAO\n)\nVALUES \n(\nb.CODIGO_VENDA\n,b.CODIGO_PRODUTO\n,b.VALOR_UNITARIO\n,b.QUANTIDADE\n,b.VALOR_FINAL\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n\n</code></pre>"},{"location":"7_ingestao_dados_camada_silver/#seq-76-ingestao-de-dados-na-camada-silver-de-tb_loja","title":"SEQ-7.6 - Ingest\u00e3o de Dados na camada \"silver\" de tb_loja","text":"<pre><code>%sql\nMERGE INTO silver.tb_loja a\nUSING (\nSELECT \nCODIGO_LOJA\n,IFNULL(TRIM(acentuacao(NOME_LOJA)),'N/A') NOME_LOJA\n,IFNULL(TRIM(acentuacao(LOCALIDADE_LOJA)),'N/A') LOCALIDADE_LOJA\n,IFNULL(TRIM(TIPO_LOJA),'N/A') TIPO_LOJA\nFROM bronze.tb_loja\n) b\n\nON a.CODIGO_LOJA= b.CODIGO_LOJA\n\nWHEN MATCHED THEN\nUPDATE SET \na.NOME_LOJA = b.NOME_LOJA\n,a.LOCALIDADE_LOJA = b.LOCALIDADE_LOJA\n,a.TIPO_LOJA = b.TIPO_LOJA\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT (\nCODIGO_LOJA\n,NOME_LOJA\n,LOCALIDADE_LOJA\n,TIPO_LOJA\n,DATA_CADASTRO\n,DATA_ALTERACAO\n) \nVALUES \n(b.CODIGO_LOJA\n,b.NOME_LOJA\n,b.LOCALIDADE_LOJA\n,b.TIPO_LOJA\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n</code></pre>"},{"location":"7_ingestao_dados_camada_silver/#seq-77-ingestao-de-dados-na-camada-silver-de-tb_produto","title":"SEQ-7.7 - Ingest\u00e3o de Dados na camada \"silver\" de tb_produto","text":"<pre><code>%sql\n\nMERGE INTO silver.tb_produto a\nUSING (SELECT \nPROD.CODIGO_PRODUTO\n,IFNULL(TRIM(acentuacao(PROD.DESCRICAO_PRODUTO)),'N/A') DESCRICAO_PRODUTO\n,IFNULL(TRIM(PROD.CODIGO_CATEGORIA),'N/A') CODIGO_CATEGORIA\nFROM bronze.tb_produto PROD) b\n\nON a.CODIGO_PRODUTO= b.CODIGO_PRODUTO\n\nWHEN MATCHED \nTHEN\nUPDATE SET \na.DESCRICAO_PRODUTO = b.DESCRICAO_PRODUTO\n,a.CODIGO_CATEGORIA = b.CODIGO_CATEGORIA\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT \n(\nCODIGO_PRODUTO\n,DESCRICAO_PRODUTO\n,CODIGO_CATEGORIA\n,DATA_CADASTRO\n,DATA_ALTERACAO\n) \nVALUES \n(\nb.CODIGO_PRODUTO\n,b.DESCRICAO_PRODUTO\n,b.CODIGO_CATEGORIA\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n</code></pre>"},{"location":"7_ingestao_dados_camada_silver/#seq-78-ingestao-de-dados-na-camada-silver-de-tb_venda","title":"SEQ-7.8 - Ingest\u00e3o de Dados na camada \"silver\" de tb_venda","text":"<pre><code>%sql\n\nMERGE INTO silver.tb_venda a\nUSING (\nSELECT \nCODIGO_VENDA\n,DATA_VENDA\n,CODIGO_CLIENTE\n,CODIGO_VENDEDOR\n,CODIGO_LOJA\n,VALOR_FINAL\n,IFNULL(TRIM(FORMA_PAGAMENTO),'N/A') FORMA_PAGAMENTO\n,IFNULL(TRIM(TIPO_PAGAMENTO),'N/A') TIPO_PAGAMENTO\nFROM bronze.tb_venda\n) b\n\nON a.CODIGO_VENDA= b.CODIGO_VENDA\n\nWHEN MATCHED THEN\nUPDATE SET \na.DATA_VENDA = b.DATA_VENDA\n,a.CODIGO_CLIENTE = b.CODIGO_CLIENTE\n,a.CODIGO_VENDEDOR = b.CODIGO_VENDEDOR\n,a.CODIGO_LOJA = b.CODIGO_LOJA\n,a.VALOR_FINAL = b.VALOR_FINAL\n,a.FORMA_PAGAMENTO = b.FORMA_PAGAMENTO\n,a.TIPO_PAGAMENTO = b.TIPO_PAGAMENTO\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT \n(\nCODIGO_VENDA\n,DATA_VENDA\n,CODIGO_CLIENTE\n,CODIGO_VENDEDOR\n,CODIGO_LOJA\n,VALOR_FINAL\n,FORMA_PAGAMENTO\n,TIPO_PAGAMENTO\n,DATA_CADASTRO\n,DATA_ALTERACAO\n)\nVALUES (\nb.CODIGO_VENDA\n,b.DATA_VENDA\n,b.CODIGO_CLIENTE\n,b.CODIGO_VENDEDOR\n,b.CODIGO_LOJA\n,b.VALOR_FINAL\n,b.FORMA_PAGAMENTO\n,b.TIPO_PAGAMENTO\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n</code></pre>"},{"location":"7_ingestao_dados_camada_silver/#seq-79-ingestao-de-dados-na-camada-silver-de-tb_vendedor","title":"SEQ-7.9 - Ingest\u00e3o de Dados na camada \"silver\" de tb_vendedor","text":"<pre><code>%sql\n\nMERGE INTO silver.tb_vendedor a\nUSING (\nSELECT \nCODIGO_VENDEDOR\n,IFNULL(TRIM(acentuacao(NOME_VENDEDOR)),'N/A') NOME_VENDEDOR\nFROM bronze.tb_vendedor\n) b\n\nON a.CODIGO_VENDEDOR= b.CODIGO_VENDEDOR\n\nWHEN MATCHED THEN\nUPDATE SET \na.NOME_VENDEDOR = b.NOME_VENDEDOR\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT \n(\nCODIGO_VENDEDOR\n,NOME_VENDEDOR\n,DATA_CADASTRO\n,DATA_ALTERACAO\n) \nVALUES \n(\nb.CODIGO_VENDEDOR\n,b.NOME_VENDEDOR\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n</code></pre>"},{"location":"8_ingestao_dados_camada_gold/","title":"Projeto BI Zero TO DW","text":""},{"location":"8_ingestao_dados_camada_gold/#8-ingestao-dos-dados-na-camada-gold","title":"8 - Ingest\u00e3o dos Dados na Camada Gold","text":"Sequ\u00eancia A\u00e7\u00e3o Detalhamento SEQ-8.1 / SEQ-8.2 / SEQ-8.3 / SEQ-8.4 / SEQ-8.5 / SEQ-8.6 Ingest\u00e3o dos Dados da Camada Silver para Gold Carga realizada baseada nos dados existentes nas tabelas da camada Silver. SEQ-8.1 / SEQ-8.2 / SEQ-8.3 / SEQ-8.4 / SEQ-8.5 / SEQ-8.6 Identificar a data de altera\u00e7\u00e3o ou cadastro Regra: Caso o registro n\u00e3o exista (caindo na condi\u00e7\u00e3o INSERT do MERGE), a data de cadastro e data de altera\u00e7\u00e3o devem ser a mesma, caso o registro exista, a data de altera\u00e7\u00e3o dever\u00e1 ser alterada. SEQ-8.1 / SEQ-8.2 / SEQ-8.3 / SEQ-8.4 / SEQ-8.5 / SEQ-8.6 Cria\u00e7\u00e3o da PK usando o Algoritmo HASH(256) Regra: Usar a PK da tabela na camada Silver e encriptar usando HASH(256). SEQ-8.1 / SEQ-8.2 / SEQ-8.3 / SEQ-8.4 / SEQ-8.5 / SEQ-8.6 SCD Tipos N\u00e3o estaremos aplicando nenhuma forma de versionamento dos dados na camada dimensional. <p>O arquivo do Notebook \u00e9 encontrado aqui. Notebook Ingest\u00e3o Dados Para Camada Gold</p>"},{"location":"8_ingestao_dados_camada_gold/#seq-81-carga-tabela-camada-gold-dim_categoria_produto","title":"SEQ-8.1 - Carga Tabela Camada Gold - dim_categoria_produto","text":"<pre><code>%sql\nMERGE INTO gold.DIM_CATEGORIA_PRODUTO a\nUSING (\nSELECT \nhash(CODIGO_CATEGORIA, 256) ID_CATEGORIA_PRODUTO\n,CODIGO_CATEGORIA\n,acentuacao(DECRICAO_CATEGORIA) DECRICAO_CATEGORIA\nFROM silver.tb_categoria_produto\n) b\n\nON a.ID_CATEGORIA_PRODUTO= b.ID_CATEGORIA_PRODUTO\n\nWHEN MATCHED THEN\nUPDATE SET \na.CODIGO_CATEGORIA = b.CODIGO_CATEGORIA\n,a.DECRICAO_CATEGORIA = b.DECRICAO_CATEGORIA\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT \n(\nID_CATEGORIA_PRODUTO\n,CODIGO_CATEGORIA\n,DECRICAO_CATEGORIA\n,DATA_CADASTRO\n,DATA_ALTERACAO\n) \nVALUES \n(\nb.ID_CATEGORIA_PRODUTO\n,b.CODIGO_CATEGORIA\n,b.DECRICAO_CATEGORIA\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n</code></pre>"},{"location":"8_ingestao_dados_camada_gold/#seq-82-carga-tabela-camada-gold-dim_cliente","title":"SEQ-8.2 - Carga Tabela Camada Gold - dim_cliente","text":"<pre><code>%sql\nMERGE INTO gold.DIM_CLIENTE a\nUSING (\nSELECT \nhash(CODIGO_CLIENTE, 256) ID_CLIENTE\n,CODIGO_CLIENTE\n,acentuacao(NOME_CLIENTE) NOME_CLIENTE\nFROM silver.tb_cliente\n) b\n\nON a.ID_CLIENTE= b.ID_CLIENTE\n\nWHEN MATCHED THEN\nUPDATE SET \na.CODIGO_CLIENTE = b.CODIGO_CLIENTE\n,a.NOME_CLIENTE = b.NOME_CLIENTE\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT \n(\nID_CLIENTE\n,CODIGO_CLIENTE\n,NOME_CLIENTE\n,DATA_CADASTRO\n,DATA_ALTERACAO\n)\nVALUES \n(\nb.ID_CLIENTE\n,b.CODIGO_CLIENTE\n,b.NOME_CLIENTE\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n\n</code></pre>"},{"location":"8_ingestao_dados_camada_gold/#seq-83-carga-tabela-camada-gold-dim_forma_pagamento","title":"SEQ-8.3 - Carga Tabela Camada Gold - dim_forma_pagamento","text":"<pre><code>%sql\nMERGE INTO gold.DIM_FORMA_PAGAMENTO a\nUSING (\nSELECT \nhash(CODIGO_FORMA_PAGAMENTO, 256) ID_FORMA_PAGAMENTO\n,CODIGO_FORMA_PAGAMENTO\n,DESCRICAO_FORMA_PAGAMENTO DESCRICAO_FORMA_PAGAMENTO\nFROM silver.tb_forma_pagamento\n) b\n\nON a.ID_FORMA_PAGAMENTO= b.ID_FORMA_PAGAMENTO\n\nWHEN MATCHED THEN\nUPDATE SET \na.CODIGO_FORMA_PAGAMENTO = b.CODIGO_FORMA_PAGAMENTO\n,a.DESCRICAO_FORMA_PAGAMENTO = b.DESCRICAO_FORMA_PAGAMENTO\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT \n(\nID_FORMA_PAGAMENTO  \n,CODIGO_FORMA_PAGAMENTO\n,DESCRICAO_FORMA_PAGAMENTO\n,DATA_CADASTRO\n,DATA_ALTERACAO) \nVALUES \n(\nb.ID_FORMA_PAGAMENTO\n,b.CODIGO_FORMA_PAGAMENTO\n,b.DESCRICAO_FORMA_PAGAMENTO\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n\n</code></pre>"},{"location":"8_ingestao_dados_camada_gold/#seq-84-carga-tabela-camada-gold-dim_loja","title":"SEQ-8.4 - Carga Tabela Camada Gold - dim_loja","text":"<pre><code>%sql\nMERGE INTO gold.DIM_LOJA a\nUSING (\nSELECT \nhash(CODIGO_LOJA, 256) ID_LOJA\n,CODIGO_LOJA\n,acentuacao(NOME_LOJA) NOME_LOJA\n,acentuacao(LOCALIDADE_LOJA) LOCALIDADE_LOJA\n,TIPO_LOJA\nFROM silver.tb_loja\n) b\n\nON a.ID_LOJA= b.ID_LOJA\n\nWHEN MATCHED THEN\nUPDATE SET \na.CODIGO_LOJA = b.CODIGO_LOJA\n,a.NOME_LOJA = b.NOME_LOJA\n,a.LOCALIDADE_LOJA = b.LOCALIDADE_LOJA\n,a.TIPO_LOJA = b.TIPO_LOJA\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT (\nID_LOJA\n,CODIGO_LOJA\n,NOME_LOJA\n,LOCALIDADE_LOJA\n,TIPO_LOJA\n,DATA_CADASTRO\n,DATA_ALTERACAO\n) \nVALUES \n(\nb.ID_LOJA\n,b.CODIGO_LOJA\n,b.NOME_LOJA\n,b.LOCALIDADE_LOJA\n,b.TIPO_LOJA\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n\n</code></pre>"},{"location":"8_ingestao_dados_camada_gold/#seq-85-carga-tabela-camada-gold-dim_produto","title":"SEQ-8.5 - Carga Tabela Camada Gold - dim_produto","text":"<pre><code>%sql\n\nMERGE INTO gold.DIM_PRODUTO a\nUSING (SELECT \nhash(CODIGO_PRODUTO, 256) ID_PRODUTO\n,PROD.CODIGO_PRODUTO\n,PROD.DESCRICAO_PRODUTO DESCRICAO_PRODUTO\n,PROD.CODIGO_CATEGORIA\nFROM silver.tb_produto PROD) b\n\nON a.ID_PRODUTO= b.ID_PRODUTO\n\nWHEN MATCHED \nTHEN\nUPDATE SET \na.CODIGO_PRODUTO = b.CODIGO_PRODUTO\n,a.DESCRICAO_PRODUTO = b.DESCRICAO_PRODUTO\n,a.CODIGO_CATEGORIA = b.CODIGO_CATEGORIA\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT \n(\nID_PRODUTO\n,CODIGO_PRODUTO\n,DESCRICAO_PRODUTO\n,CODIGO_CATEGORIA\n,DATA_CADASTRO\n,DATA_ALTERACAO\n) \nVALUES \n(\nb.ID_PRODUTO\n,b.CODIGO_PRODUTO\n,b.DESCRICAO_PRODUTO\n,b.CODIGO_CATEGORIA\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n\n</code></pre>"},{"location":"8_ingestao_dados_camada_gold/#seq-86-carga-tabela-camada-gold-dim_vendedor","title":"SEQ-8.6 - Carga Tabela Camada Gold - dim_vendedor","text":"<pre><code>%sql\n\nMERGE INTO gold.DIM_VENDEDOR a\nUSING (\nSELECT \nhash(CODIGO_VENDEDOR, 256) ID_VENDEDOR\n,CODIGO_VENDEDOR\n,NOME_VENDEDOR NOME_VENDEDOR\nFROM silver.tb_vendedor\n) b\n\nON a.ID_VENDEDOR= b.ID_VENDEDOR\n\nWHEN MATCHED THEN\nUPDATE SET \na.CODIGO_VENDEDOR = b.CODIGO_VENDEDOR\n,a.NOME_VENDEDOR = b.NOME_VENDEDOR\n,a.DATA_ALTERACAO = from_utc_timestamp(now(),'GMT-3')\n\nWHEN NOT MATCHED\nTHEN \nINSERT \n(\nID_VENDEDOR\n,CODIGO_VENDEDOR\n,NOME_VENDEDOR\n,DATA_CADASTRO\n,DATA_ALTERACAO\n) \nVALUES \n(\nb.ID_VENDEDOR\n,b.CODIGO_VENDEDOR\n,b.NOME_VENDEDOR\n,from_utc_timestamp(now(),'GMT-3')\n,from_utc_timestamp(now(),'GMT-3')\n)\n</code></pre>"},{"location":"9_analise_dados/","title":"Projeto BI Zero TO DW","text":""},{"location":"9_analise_dados/#9-analise-dos-dados","title":"9 - An\u00e1lise dos Dados","text":""}]}